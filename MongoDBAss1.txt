-----------------------------------------INSERT , QUERY/FIND DOCUMENTS-------------------------------------------------------


db.movies.find().pretty();
{
        "_id" : ObjectId("6184d06c3d5b98583aa25d6e"),
        "title" : "fight club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"),
        "title" : "Pulp fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "uma thurman"
        ]
}
{
        "_id" : ObjectId("6184d2e60a42bdfc1d7e2a8f"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}
{
        "_id" : ObjectId("6184d5a50a42bdfc1d7e2a90"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("6184d5e40a42bdfc1d7e2a91"),
        "title" : "The Hobbit;the Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("6184d61d0a42bdfc1d7e2a92"),
        "title" : "The Hobbit:The Battle of The Five Armies",
        "writer" : "J.R.R.Tolkein",
        "year" : 2014,
        "franchise" : "the Hobbit",
        "Synopsis" : "Bibo and Company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a raising darkness"
}
{
        "_id" : ObjectId("6184d61d0a42bdfc1d7e2a93"),
        "title" : "Pee wee Herman's Big Adventure"
}
{ "_id" : ObjectId("6184d61d0a42bdfc1d7e2a94"), "title" : "Avtar" }



1.------->>

db.movies.find({"writer":"Quentin Tarantino"}).pretty();
{
        "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"),
        "title" : "Pulp fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "uma thurman"
        ]
}
{
        "_id" : ObjectId("6184d2e60a42bdfc1d7e2a8f"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}



2------->>>

> db.movies.find({"actors":"Brad Pitt"}).pretty();
{
        "_id" : ObjectId("6184d06c3d5b98583aa25d6e"),
        "title" : "fight club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("6184d2e60a42bdfc1d7e2a8f"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}



3..--->>
db.movies.find({"franchise" : "The Hobbit"}).pretty();
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a98"),
        "title" : "The Hobbit:The Battle of The Five Armies",
        "writer" : "J.R.R.Tolkein",
        "year" : 2014,
        "franchise" : "The Hobbit",
        "Synopsis" : "Bibo and Company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a raising darkness"
}



4...--->>
db.movies.find({$and: [{year: {$gt: 1900}}, {year: {$lt: 2000}}]}).pretty();
{
        "_id" : ObjectId("6184d06c3d5b98583aa25d6e"),
        "title" : "fight club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"),
        "title" : "Pulp fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "uma thurman"
        ]
}



5..---->>>
db.movies.find({$or: [{year: {$lt: 2000}}, {year: {$gt: 2010}}]}).pretty()
{
        "_id" : ObjectId("6184d06c3d5b98583aa25d6e"),
        "title" : "fight club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"),
        "title" : "Pulp fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "uma thurman"
        ]
}
{
        "_id" : ObjectId("6184d5a50a42bdfc1d7e2a90"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("6184d5e40a42bdfc1d7e2a91"),
        "title" : "The Hobbit;the Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit"
}
{
        "_id" : ObjectId("6184d85f0a42bdfc1d7e2a95"),
        "title" : "The Hobbit:The Battle of The Five Armies",
        "writer" : "J.R.R.Tolkein",
        "year" : 2014,
        "franchise" : "The Hobbit",
        "Synopsis" : "Bibo and Company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a raising darkness"
}




-----------------------------------------UPDATE  DOCUMENTS-----------------------------------------------------

1..----->>>
db.movies.update({ "title": "The Hobbit:An Unexpected Journey" }, { $set: { "synopsis": "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." } });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

2...--->>>
> db.movies.update({ "title": "The Hobbit:The Desolation of Smaug" }, { $set: { "synopsis": "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring." } });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })


3..--->>>
db.movies.update({ "title": "Pulp fiction" }, { $push: { "actors": "Samuel L. Jackson" } });
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

db.movies.find().pretty();
{
        "_id" : ObjectId("6184d06c3d5b98583aa25d6e"),
        "title" : "fight club",
        "writer" : "Chuck Palahniuko",
        "year" : 1999,
        "actors" : [
                "Brad Pitt",
                "Edward Norton"
        ]
}
{
        "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"),
        "title" : "Pulp fiction",
        "writer" : "Quentin Tarantino",
        "year" : 1994,
        "actors" : [
                "John Travolta",
                "uma thurman",
                "Samuel L. Jackson"
        ]
}
{
        "_id" : ObjectId("6184d2e60a42bdfc1d7e2a8f"),
        "title" : "Inglorious Basterds",
        "writer" : "Quentin Tarantino",
        "year" : 2009,
        "actors" : [
                "Brad Pitt",
                "Diane Kruger",
                "Eli Roth"
        ]
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a98"),
        "title" : "The Hobbit:The Battle of The Five Armies",
        "writer" : "J.R.R.Tolkein",
        "year" : 2014,
        "franchise" : "The Hobbit",
        "Synopsis" : "Bibo and Company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a raising darkness"
}
{
        "_id" : ObjectId("6184f1a30a42bdfc1d7e2a99"),
        "title" : "Pee wee Herman's Big Adventure"
}
{ "_id" : ObjectId("6184f1b10a42bdfc1d7e2a9a"), "title" : "Avtar" }






---------------------------------------------------------------TEXT  SEARCH--------------------------------------------------

1...---->>>>

db.movies.find({ synopsis: /Bilbo/g }).pretty();
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}


2...--->>>
db.movies.find({ synopsis: /Gandalf/g }).pretty()
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}



3...--->>>
db.movies.find({ $and: [{ synopsis: /Bilbo/g }, { synopsis: { $not: /Gandalf/g } }] }).pretty();
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}



4...--->>>
db.movies.find({ synopsis: /(dwarves|hobbit)/g }).pretty();
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"),
        "title" : "The Hobbit:The Desolation of Smaug",
        "writer" : "J.R.R.Tolkein",
        "year" : 2013,
        "franchise" : "The Hobbit",
        "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."
}




5...--->>>
db.movies.find({ $and: [{ synopsis: /gold/g }, { synopsis: /dragon/g }] }).pretty();
{
        "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"),
        "title" : "The Hobbit:An Unexpected Journey",
        "writer" : "J.R.R.Tolkein",
        "year" : 2012,
        "franchise" : "The Hobbit",
        "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."
}





--------------------------------------DELETE  DOCUMENTS----------------------------------------------------

1.    db.movies.remove({"title" : "Pee wee Herman's Big Adventure"});
      WriteResult({ "nRemoved" : 1 })

2.    db.movies.remove({"title" : "Avtar"});
      WriteResult({ "nRemoved" : 1 })


> db.movies.find()
{ "_id" : ObjectId("6184d06c3d5b98583aa25d6e"), "title" : "fight club", "writer" : "Chuck Palahniuko", "year" : 1999, "actors" : [ "Brad Pitt", "Edward Norton" ] }
{ "_id" : ObjectId("6184d2670a42bdfc1d7e2a8e"), "title" : "Pulp fiction", "writer" : "Quentin Tarantino", "year" : 1994, "actors" : [ "John Travolta", "uma thurman", "Samuel L. Jackson" ] }
{ "_id" : ObjectId("6184d2e60a42bdfc1d7e2a8f"), "title" : "Inglorious Basterds", "writer" : "Quentin Tarantino", "year" : 2009, "actors" : [ "Brad Pitt", "Diane Kruger", "Eli Roth" ] }
{ "_id" : ObjectId("6184f0e90a42bdfc1d7e2a96"), "title" : "The Hobbit:An Unexpected Journey", "writer" : "J.R.R.Tolkein", "year" : 2012, "franchise" : "The Hobbit", "synopsis" : "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }
{ "_id" : ObjectId("6184f0e90a42bdfc1d7e2a97"), "title" : "The Hobbit:The Desolation of Smaug", "writer" : "J.R.R.Tolkein", "year" : 2013, "franchise" : "The Hobbit", "synopsis" : "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring." }
{ "_id" : ObjectId("6184f0e90a42bdfc1d7e2a98"), "title" : "The Hobbit:The Battle of The Five Armies", "writer" : "J.R.R.Tolkein", "year" : 2014, "franchise" : "The Hobbit", "Synopsis" : "Bibo and Company are forced to engage in a war against an array of combatants and keep the lonely mountain from falling into the hands of a raising darkness" }
>




---------------------------------------------------------RELATIONSHIPS -----------------------------------------------------------------------

1...--->>>Creating Users collection and Inserting documents into it.

db.users.insertMany([ { username: "GoodGuyGreg", first_name: "Good Guy", last_name: "Greg" }, { username: "ScumbagSteve", full_name: { first: "Scumbag", last: "Steve" } } ]);
{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("6184fc1268c9bd30cc8a2013"),
                ObjectId("6184fc1268c9bd30cc8a2014")
        ]
}


 db.users.find().pretty();
{
        "_id" : ObjectId("6184fc1268c9bd30cc8a2013"),
        "username" : "GoodGuyGreg",
        "first_name" : "Good Guy",
        "last_name" : "Greg"
}
{
        "_id" : ObjectId("6184fc1268c9bd30cc8a2014"),
        "username" : "ScumbagSteve",
        "full_name" : {
                "first" : "Scumbag",
                "last" : "Steve"
        }
}




2...--->>> Creating Posts collection and Inserting documents into it.

db.posts.insertMany([ { username: "GoodGuyGreg", title: "Passes out at party", body: "Wakes up early and cleans house" }, { username: "GoodGuyGreg", title: "Steals your identity", body: "Raises your credit score" }, { username: "GoodGuyGreg", title: "Reports a bug in your code", body: "Sends you a Pull Request" }, { username: "ScumbagSteve", title: "Borrows something", body: "Sells it" }, { username: "ScumbagSteve", title: "Borrows everything", body: "The end" }, { username: "ScumbagSteve", title: "Forks your repo on github", body: "Sets to private" } ]);
{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("6184fe4e68c9bd30cc8a201b"),
                ObjectId("6184fe4e68c9bd30cc8a201c"),
                ObjectId("6184fe4e68c9bd30cc8a201d"),
                ObjectId("6184fe4e68c9bd30cc8a201e"),
                ObjectId("6184fe4e68c9bd30cc8a201f"),
                ObjectId("6184fe4e68c9bd30cc8a2020")
        ]
}


> db.posts.find().pretty();
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201b"),
        "username" : "GoodGuyGreg",
        "title" : "Passes out at party",
        "body" : "Wakes up early and cleans house"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201c"),
        "username" : "GoodGuyGreg",
        "title" : "Steals your identity",
        "body" : "Raises your credit score"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201d"),
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201e"),
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201f"),
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a2020"),
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}




3...--->>>Creating Comments collection and Inserting documents into it.

db.comments.insertMany([ { username: "GoodGuyGreg", comment: "Hope you got a good deal!", post: ObjectId("6184fe4e68c9bd30cc8a201e") }, { username: "GoodGuyGreg", comment: "Don't violate the licensing agreement!", post: ObjectId("6184fe4e68c9bd30cc8a201f") }, { username: "GoodGuyGreg", comment: "Don't violate the licensing agreement!", post: ObjectId("6184fe4e68c9bd30cc8a2020") }, { username: "ScumbagSteve", comment: "It still isn't clean", post: ObjectId("6184fe4e68c9bd30cc8a201b") }, { username: "ScumbagSteve", comment: "Denied your PR cause I found a hack", post: ObjectId("6184fe4e68c9bd30cc8a201d") } ]);
{
        "acknowledged" : true,
        "insertedIds" : [
                ObjectId("6185047068c9bd30cc8a203b"),
                ObjectId("6185047068c9bd30cc8a203c"),
                ObjectId("6185047068c9bd30cc8a203d"),
                ObjectId("6185047068c9bd30cc8a203e"),
                ObjectId("6185047068c9bd30cc8a203f")
        ]
}


> db.comments.find().pretty();
{
        "_id" : ObjectId("6185047068c9bd30cc8a203b"),
        "username" : "GoodGuyGreg",
        "comment" : "Hope you got a good deal!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201e")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203c"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201f")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203d"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a2020")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203e"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201b")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203f"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201d")
}
>






------------------------------------------------------------------QUERYING RELATED COLLECTIONS-----------------------------------------------------

1...--->>>

db.users.find().pretty();
{
        "_id" : ObjectId("6184fc1268c9bd30cc8a2013"),
        "username" : "GoodGuyGreg",
        "first_name" : "Good Guy",
        "last_name" : "Greg"
}
{
        "_id" : ObjectId("6184fc1268c9bd30cc8a2014"),
        "username" : "ScumbagSteve",
        "full_name" : {
                "first" : "Scumbag",
                "last" : "Steve"
        }
}




2...--->>>

> db.posts.find().pretty();
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201b"),
        "username" : "GoodGuyGreg",
        "title" : "Passes out at party",
        "body" : "Wakes up early and cleans house"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201c"),
        "username" : "GoodGuyGreg",
        "title" : "Steals your identity",
        "body" : "Raises your credit score"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201d"),
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201e"),
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a201f"),
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : ObjectId("6184fe4e68c9bd30cc8a2020"),
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}




3...--->>>

> db.posts.find({"username" : "GoodGuyGreg" }).pretty();
{
        "_id" : ObjectId("6184fed468c9bd30cc8a2026"),
        "username" : "GoodGuyGreg",
        "title" : "Passes out at party",
        "body" : "Wakes up early and cleans house"
}
{
        "_id" : ObjectId("6184fed468c9bd30cc8a2027"),
        "username" : "GoodGuyGreg",
        "title" : "Steals your identity",
        "body" : "Raises your credit score"
}
{
        "_id" : ObjectId("6184fed468c9bd30cc8a2028"),
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request"
}




4...--->>>

> db.posts.find({"username" : "ScumbagSteve" }).pretty();
{
        "_id" : ObjectId("6184fed468c9bd30cc8a2029"),
        "username" : "ScumbagSteve",
        "title" : "Borrows something",
        "body" : "Sells it"
}
{
        "_id" : ObjectId("6184fed468c9bd30cc8a202a"),
        "username" : "ScumbagSteve",
        "title" : "Borrows everything",
        "body" : "The end"
}
{
        "_id" : ObjectId("6184fed468c9bd30cc8a202b"),
        "username" : "ScumbagSteve",
        "title" : "Forks your repo on github",
        "body" : "Sets to private"
}
>




5...--->>>

> db.comments.find().pretty();
{
        "_id" : ObjectId("6185047068c9bd30cc8a203b"),
        "username" : "GoodGuyGreg",
        "comment" : "Hope you got a good deal!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201e")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203c"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201f")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203d"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a2020")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203e"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201b")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203f"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201d")
}
>






6...--->>>

> db.comments.find({"username" : "GoodGuyGreg" }).pretty();
{
        "_id" : ObjectId("6185047068c9bd30cc8a203b"),
        "username" : "GoodGuyGreg",
        "comment" : "Hope you got a good deal!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201e")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203c"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201f")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203d"),
        "username" : "GoodGuyGreg",
        "comment" : "Don't violate the licensing agreement!",
        "post" : ObjectId("6184fe4e68c9bd30cc8a2020")
}




7...--->>>

> db.comments.find({"username" : "ScumbagSteve" }).pretty();
{
        "_id" : ObjectId("6185047068c9bd30cc8a203e"),
        "username" : "ScumbagSteve",
        "comment" : "It still isn't clean",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201b")
}
{
        "_id" : ObjectId("6185047068c9bd30cc8a203f"),
        "username" : "ScumbagSteve",
        "comment" : "Denied your PR cause I found a hack",
        "post" : ObjectId("6184fe4e68c9bd30cc8a201d")
}
>



8...--->>>

> db.posts.aggregate([ { $match: { title: 'Reports a bug in your code' } }, { $lookup: { from: 'comments', localField: '_id', foreignField: 'post', as: 'comments' } } ]).pretty();
{
        "_id" : ObjectId("6184fed468c9bd30cc8a2028"),
        "username" : "GoodGuyGreg",
        "title" : "Reports a bug in your code",
        "body" : "Sends you a Pull Request",
        "comments" : [ ]
}
>
>





